>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Positive/Negative Divisor
-------------------------

.. code-block:: python

	>>> print(matrix_divided([[2, 4], [6, 8]], 2))
	[[1.0, 2.0], [3.0, 4.0]]

	>>> print(matrix_divided([[2, 4], [6, 8]], -2))
	[[-1.0, -2.0], [-3.0, -4.0]]

Float As Matrix
---------------

.. code-block:: python

	>>> print(matrix_divided([[2.2, 4.2], [6.2, 8.2]], 2))
	[[1.1, 2.1], [3.1, 4.1]]

	>>> print(matrix_divided([[2.222, 4.222], [6.222, 8.222]], 2))
	[[1.11, 2.11], [3.11, 4.11]]

	>>> print(matrix_divided([[2.2, 4], [6.2, 8]], 2))
	[[1.1, 2.0], [3.1, 4.0]]

	>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 2.5))
	[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Float As Divisor
----------------

.. code-block:: python

	>>> print(matrix_divided([[2, 4], [6, 8]], 1.5))
	[[1.33, 2.67], [4.0, 5.33]]

	>>> print(matrix_divided([[2, 4], [6, 8]], -1.5))
        [[-1.33, -2.67], [-4.0, -5.33]]

Zero As Divisor
---------------

.. code-block:: python

	>>> print(matrix_divided([[2, 4], [6, 8]], 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

List Of Integers As Matrix
--------------------------

.. code-block:: python

	>>> print(matrix_divided([1, 2], 1))
	Traceback (most recent call last):
        ...
	TypeError: object of type 'int' has no len()

	>>> print(matrix_divided([[1, 2]], 1))
	[[1.0, 2.0]]

Use Of Character
----------------

.. code-block:: python

	>>> print(matrix_divided([[2, 4], [6, 8]], 'A'))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> print(matrix_divided([[2, 4], ['A', 8]], 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[2, 4], ['A', 8]], 'A'))
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

String As Matrix
----------------

.. code-block:: python

	>>> print(matrix_divided("Hello", 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Different Matrix Lengths
------------------------

.. code-block:: python

	>>> print(matrix_divided([[2, 4], [6]], 0))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

None As Matrix
--------------

.. code-block:: python

	>>> print(matrix_divided(None, 0))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[2, 4], [6, 8]], None))
	Traceback (most recent call last):
        ...
        TypeError: div must be a number

Wrong Arguments Number
----------------------

.. code-block:: python

	>>> print(matrix_divided([[1, 1], [1, 1]], 1, 1))
	Traceback (most recent call last):
        ...
        TypeError: matrix_divided() takes 2 positional arguments but 3 were given

	>>> print(matrix_divided())
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'